Terminals unused in grammar

   COLON
   DOT
   WHILE
   FOR
   RETURN
   BREAK
   CONTINUE
   STRING_T


状態 15 conflicts: 12 shift/reduce


文法

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement_list
    2                 | translation_unit definition_or_statement_list

    3 definition_or_statement_list: function_definition
    4                             | statement_list

    5 statement_list: statement_list broad_statement
    6               | broad_statement

    7 broad_statement: statement
    8                | if_statement

    9 if_statement: IF LP expression RP LC statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF LP expression RP LC statement_list RC ELSE LC statement_list RC
   11             | IF LP expression RP LC statement_list RC

   12 elsif_list: elsif_list ELSIF LP expression RP LC statement_list RC
   13           | ELSIF LP expression RP LC statement_list RC

   14 function_definition: type_specifier IDENTIFIER LP RP SEMICOLON
   15                    | type_specifier IDENTIFIER LP parameter_list RP SEMICOLON

   16 parameter_list: type_specifier IDENTIFIER
   17               | parameter_list COMMA type_specifier IDENTIFIER

   18 argument_list: assignment_expression
   19              | argument_list COMMA assignment_expression

   20 statement: expression SEMICOLON
   21          | declaration_statement

   22 declaration_statement: type_specifier IDENTIFIER SEMICOLON
   23                      | type_specifier IDENTIFIER ASSIGN_T expression SEMICOLON

   24 type_specifier: BOOLEAN_T
   25               | INT_T
   26               | DOUBLE_T

   27 expression: assignment_expression

   28 assignment_expression: logical_or_expression
   29                      | postfix_expression assignment_operator assignment_expression

   30 assignment_operator: ASSIGN_T
   31                    | ADD_ASSIGN_T
   32                    | SUB_ASSIGN_T
   33                    | MUL_ASSIGN_T
   34                    | DIV_ASSIGN_T
   35                    | MOD_ASSIGN_T

   36 logical_or_expression: logical_and_expression
   37                      | logical_or_expression LOGICAL_OR logical_and_expression

   38 logical_and_expression: equality_expression
   39                       | logical_and_expression LOGICAL_AND equality_expression

   40 equality_expression: relational_expression
   41                    | equality_expression EQ relational_expression
   42                    | equality_expression NE relational_expression

   43 relational_expression: additive_expression
   44                      | relational_expression GT additive_expression
   45                      | relational_expression GE additive_expression
   46                      | relational_expression LT additive_expression
   47                      | relational_expression LE additive_expression

   48 additive_expression: multiplicative_expression
   49                    | additive_expression ADD multiplicative_expression
   50                    | additive_expression SUB multiplicative_expression

   51 multiplicative_expression: unary_expression
   52                          | multiplicative_expression MUL unary_expression
   53                          | multiplicative_expression DIV unary_expression
   54                          | multiplicative_expression MOD unary_expression

   55 unary_expression: postfix_expression
   56                 | SUB unary_expression
   57                 | EXCLAMATION unary_expression

   58 postfix_expression: primary_expression
   59                   | postfix_expression LP argument_list RP
   60                   | postfix_expression LP RP
   61                   | postfix_expression INCREMENT
   62                   | postfix_expression DECREMENT

   63 primary_expression: LP expression RP
   64                   | IDENTIFIER
   65                   | INT_LITERAL
   66                   | DOUBLE_LITERAL
   67                   | TRUE_T
   68                   | FALSE_T


出現位置の規則による終端

$end (0) 0
error (256)
LP (258) 9 10 11 12 13 14 15 59 60 63
RP (259) 9 10 11 12 13 14 15 59 60 63
LC (260) 9 10 11 12 13
RC (261) 9 10 11 12 13
COMMA (262) 17 19
LOGICAL_AND (263) 39
LOGICAL_OR (264) 37
EQ (265) 41
ASSIGN_T (266) 23 30
NE (267) 42
GT (268) 44
GE (269) 45
LE (270) 47
LT (271) 46
SEMICOLON (272) 14 15 20 22 23
COLON (273)
ADD (274) 49
SUB (275) 50 56
MUL (276) 52
DIV (277) 53
MOD (278) 54
ADD_ASSIGN_T (279) 31
SUB_ASSIGN_T (280) 32
MUL_ASSIGN_T (281) 33
DIV_ASSIGN_T (282) 34
MOD_ASSIGN_T (283) 35
INCREMENT (284) 61
DECREMENT (285) 62
EXCLAMATION (286) 57
DOT (287)
INT_LITERAL (288) 65
DOUBLE_LITERAL (289) 66
IDENTIFIER (290) 14 15 16 17 22 23 64
IF (291) 9 10 11
ELSE (292) 9 10
ELSIF (293) 12 13
WHILE (294)
FOR (295)
RETURN (296)
BREAK (297)
CONTINUE (298)
TRUE_T (299) 67
FALSE_T (300) 68
BOOLEAN_T (301) 24
INT_T (302) 25
DOUBLE_T (303) 26
STRING_T (304)


出現位置の規則による非終端

$accept (50)
    左辺: 0
translation_unit (51)
    左辺: 1 2, 右辺: 0 2
definition_or_statement_list (52)
    左辺: 3 4, 右辺: 1 2
statement_list (53)
    左辺: 5 6, 右辺: 4 5 9 10 11 12 13
broad_statement (54)
    左辺: 7 8, 右辺: 5 6
if_statement (55)
    左辺: 9 10 11, 右辺: 8
elsif_list (56)
    左辺: 12 13, 右辺: 9 12
function_definition (57)
    左辺: 14 15, 右辺: 3
parameter_list (58)
    左辺: 16 17, 右辺: 15 17
argument_list (59)
    左辺: 18 19, 右辺: 19 59
statement (60)
    左辺: 20 21, 右辺: 7
declaration_statement (61)
    左辺: 22 23, 右辺: 21
type_specifier (62)
    左辺: 24 25 26, 右辺: 14 15 16 17 22 23
expression (63)
    左辺: 27, 右辺: 9 10 11 12 13 20 23 63
assignment_expression (64)
    左辺: 28 29, 右辺: 18 19 27 29
assignment_operator (65)
    左辺: 30 31 32 33 34 35, 右辺: 29
logical_or_expression (66)
    左辺: 36 37, 右辺: 28 37
logical_and_expression (67)
    左辺: 38 39, 右辺: 36 37 39
equality_expression (68)
    左辺: 40 41 42, 右辺: 38 39 41 42
relational_expression (69)
    左辺: 43 44 45 46 47, 右辺: 40 41 42 44 45 46 47
additive_expression (70)
    左辺: 48 49 50, 右辺: 43 44 45 46 47 49 50
multiplicative_expression (71)
    左辺: 51 52 53 54, 右辺: 48 49 50 52 53 54
unary_expression (72)
    左辺: 55 56 57, 右辺: 51 52 53 54 56 57
postfix_expression (73)
    左辺: 58 59 60 61 62, 右辺: 29 55 59 60 61 62
primary_expression (74)
    左辺: 63 64 65 66 67 68, 右辺: 58


State 0

    0 $accept: . translation_unit $end

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    translation_unit              go to state 13
    definition_or_statement_list  go to state 14
    statement_list                go to state 15
    broad_statement               go to state 16
    if_statement                  go to state 17
    function_definition           go to state 18
    statement                     go to state 19
    declaration_statement         go to state 20
    type_specifier                go to state 21
    expression                    go to state 22
    assignment_expression         go to state 23
    logical_or_expression         go to state 24
    logical_and_expression        go to state 25
    equality_expression           go to state 26
    relational_expression         go to state 27
    additive_expression           go to state 28
    multiplicative_expression     go to state 29
    unary_expression              go to state 30
    postfix_expression            go to state 31
    primary_expression            go to state 32


State 1

   63 primary_expression: LP . expression RP

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    expression                 go to state 33
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 2

   56 unary_expression: SUB . unary_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    unary_expression    go to state 34
    postfix_expression  go to state 35
    primary_expression  go to state 32


State 3

   57 unary_expression: EXCLAMATION . unary_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    unary_expression    go to state 36
    postfix_expression  go to state 35
    primary_expression  go to state 32


State 4

   65 primary_expression: INT_LITERAL .

    $default  reduce using rule 65 (primary_expression)


State 5

   66 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 66 (primary_expression)


State 6

   64 primary_expression: IDENTIFIER .

    $default  reduce using rule 64 (primary_expression)


State 7

    9 if_statement: IF . LP expression RP LC statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF . LP expression RP LC statement_list RC ELSE LC statement_list RC
   11             | IF . LP expression RP LC statement_list RC

    LP  shift, and go to state 37


State 8

   67 primary_expression: TRUE_T .

    $default  reduce using rule 67 (primary_expression)


State 9

   68 primary_expression: FALSE_T .

    $default  reduce using rule 68 (primary_expression)


State 10

   24 type_specifier: BOOLEAN_T .

    $default  reduce using rule 24 (type_specifier)


State 11

   25 type_specifier: INT_T .

    $default  reduce using rule 25 (type_specifier)


State 12

   26 type_specifier: DOUBLE_T .

    $default  reduce using rule 26 (type_specifier)


State 13

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement_list

    $end            shift, and go to state 38
    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    definition_or_statement_list  go to state 39
    statement_list                go to state 15
    broad_statement               go to state 16
    if_statement                  go to state 17
    function_definition           go to state 18
    statement                     go to state 19
    declaration_statement         go to state 20
    type_specifier                go to state 21
    expression                    go to state 22
    assignment_expression         go to state 23
    logical_or_expression         go to state 24
    logical_and_expression        go to state 25
    equality_expression           go to state 26
    relational_expression         go to state 27
    additive_expression           go to state 28
    multiplicative_expression     go to state 29
    unary_expression              go to state 30
    postfix_expression            go to state 31
    primary_expression            go to state 32


State 14

    1 translation_unit: definition_or_statement_list .

    $default  reduce using rule 1 (translation_unit)


State 15

    4 definition_or_statement_list: statement_list .
    5 statement_list: statement_list . broad_statement

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    LP              [reduce using rule 4 (definition_or_statement_list)]
    SUB             [reduce using rule 4 (definition_or_statement_list)]
    EXCLAMATION     [reduce using rule 4 (definition_or_statement_list)]
    INT_LITERAL     [reduce using rule 4 (definition_or_statement_list)]
    DOUBLE_LITERAL  [reduce using rule 4 (definition_or_statement_list)]
    IDENTIFIER      [reduce using rule 4 (definition_or_statement_list)]
    IF              [reduce using rule 4 (definition_or_statement_list)]
    TRUE_T          [reduce using rule 4 (definition_or_statement_list)]
    FALSE_T         [reduce using rule 4 (definition_or_statement_list)]
    BOOLEAN_T       [reduce using rule 4 (definition_or_statement_list)]
    INT_T           [reduce using rule 4 (definition_or_statement_list)]
    DOUBLE_T        [reduce using rule 4 (definition_or_statement_list)]
    $default        reduce using rule 4 (definition_or_statement_list)

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 16

    6 statement_list: broad_statement .

    $default  reduce using rule 6 (statement_list)


State 17

    8 broad_statement: if_statement .

    $default  reduce using rule 8 (broad_statement)


State 18

    3 definition_or_statement_list: function_definition .

    $default  reduce using rule 3 (definition_or_statement_list)


State 19

    7 broad_statement: statement .

    $default  reduce using rule 7 (broad_statement)


State 20

   21 statement: declaration_statement .

    $default  reduce using rule 21 (statement)


State 21

   14 function_definition: type_specifier . IDENTIFIER LP RP SEMICOLON
   15                    | type_specifier . IDENTIFIER LP parameter_list RP SEMICOLON
   22 declaration_statement: type_specifier . IDENTIFIER SEMICOLON
   23                      | type_specifier . IDENTIFIER ASSIGN_T expression SEMICOLON

    IDENTIFIER  shift, and go to state 42


State 22

   20 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 23

   27 expression: assignment_expression .

    $default  reduce using rule 27 (expression)


State 24

   28 assignment_expression: logical_or_expression .
   37 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 44

    $default  reduce using rule 28 (assignment_expression)


State 25

   36 logical_or_expression: logical_and_expression .
   39 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 45

    $default  reduce using rule 36 (logical_or_expression)


State 26

   38 logical_and_expression: equality_expression .
   41 equality_expression: equality_expression . EQ relational_expression
   42                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 46
    NE  shift, and go to state 47

    $default  reduce using rule 38 (logical_and_expression)


State 27

   40 equality_expression: relational_expression .
   44 relational_expression: relational_expression . GT additive_expression
   45                      | relational_expression . GE additive_expression
   46                      | relational_expression . LT additive_expression
   47                      | relational_expression . LE additive_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LE  shift, and go to state 50
    LT  shift, and go to state 51

    $default  reduce using rule 40 (equality_expression)


State 28

   43 relational_expression: additive_expression .
   49 additive_expression: additive_expression . ADD multiplicative_expression
   50                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 43 (relational_expression)


State 29

   48 additive_expression: multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL unary_expression
   53                          | multiplicative_expression . DIV unary_expression
   54                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 48 (additive_expression)


State 30

   51 multiplicative_expression: unary_expression .

    $default  reduce using rule 51 (multiplicative_expression)


State 31

   29 assignment_expression: postfix_expression . assignment_operator assignment_expression
   55 unary_expression: postfix_expression .
   59 postfix_expression: postfix_expression . LP argument_list RP
   60                   | postfix_expression . LP RP
   61                   | postfix_expression . INCREMENT
   62                   | postfix_expression . DECREMENT

    LP            shift, and go to state 57
    ASSIGN_T      shift, and go to state 58
    ADD_ASSIGN_T  shift, and go to state 59
    SUB_ASSIGN_T  shift, and go to state 60
    MUL_ASSIGN_T  shift, and go to state 61
    DIV_ASSIGN_T  shift, and go to state 62
    MOD_ASSIGN_T  shift, and go to state 63
    INCREMENT     shift, and go to state 64
    DECREMENT     shift, and go to state 65

    $default  reduce using rule 55 (unary_expression)

    assignment_operator  go to state 66


State 32

   58 postfix_expression: primary_expression .

    $default  reduce using rule 58 (postfix_expression)


State 33

   63 primary_expression: LP expression . RP

    RP  shift, and go to state 67


State 34

   56 unary_expression: SUB unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 35

   55 unary_expression: postfix_expression .
   59 postfix_expression: postfix_expression . LP argument_list RP
   60                   | postfix_expression . LP RP
   61                   | postfix_expression . INCREMENT
   62                   | postfix_expression . DECREMENT

    LP         shift, and go to state 57
    INCREMENT  shift, and go to state 64
    DECREMENT  shift, and go to state 65

    $default  reduce using rule 55 (unary_expression)


State 36

   57 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 57 (unary_expression)


State 37

    9 if_statement: IF LP . expression RP LC statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF LP . expression RP LC statement_list RC ELSE LC statement_list RC
   11             | IF LP . expression RP LC statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    expression                 go to state 68
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 38

    0 $accept: translation_unit $end .

    $default  accept


State 39

    2 translation_unit: translation_unit definition_or_statement_list .

    $default  reduce using rule 2 (translation_unit)


State 40

    5 statement_list: statement_list broad_statement .

    $default  reduce using rule 5 (statement_list)


State 41

   22 declaration_statement: type_specifier . IDENTIFIER SEMICOLON
   23                      | type_specifier . IDENTIFIER ASSIGN_T expression SEMICOLON

    IDENTIFIER  shift, and go to state 69


State 42

   14 function_definition: type_specifier IDENTIFIER . LP RP SEMICOLON
   15                    | type_specifier IDENTIFIER . LP parameter_list RP SEMICOLON
   22 declaration_statement: type_specifier IDENTIFIER . SEMICOLON
   23                      | type_specifier IDENTIFIER . ASSIGN_T expression SEMICOLON

    LP         shift, and go to state 70
    ASSIGN_T   shift, and go to state 71
    SEMICOLON  shift, and go to state 72


State 43

   20 statement: expression SEMICOLON .

    $default  reduce using rule 20 (statement)


State 44

   37 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    logical_and_expression     go to state 73
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 45

   39 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    equality_expression        go to state 74
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 46

   41 equality_expression: equality_expression EQ . relational_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    relational_expression      go to state 75
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 47

   42 equality_expression: equality_expression NE . relational_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    relational_expression      go to state 76
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 48

   44 relational_expression: relational_expression GT . additive_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    additive_expression        go to state 77
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 49

   45 relational_expression: relational_expression GE . additive_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    additive_expression        go to state 78
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 50

   47 relational_expression: relational_expression LE . additive_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    additive_expression        go to state 79
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 51

   46 relational_expression: relational_expression LT . additive_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    additive_expression        go to state 80
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 52

   49 additive_expression: additive_expression ADD . multiplicative_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    multiplicative_expression  go to state 81
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 53

   50 additive_expression: additive_expression SUB . multiplicative_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    multiplicative_expression  go to state 82
    unary_expression           go to state 30
    postfix_expression         go to state 35
    primary_expression         go to state 32


State 54

   52 multiplicative_expression: multiplicative_expression MUL . unary_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    unary_expression    go to state 83
    postfix_expression  go to state 35
    primary_expression  go to state 32


State 55

   53 multiplicative_expression: multiplicative_expression DIV . unary_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    unary_expression    go to state 84
    postfix_expression  go to state 35
    primary_expression  go to state 32


State 56

   54 multiplicative_expression: multiplicative_expression MOD . unary_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    unary_expression    go to state 85
    postfix_expression  go to state 35
    primary_expression  go to state 32


State 57

   59 postfix_expression: postfix_expression LP . argument_list RP
   60                   | postfix_expression LP . RP

    LP              shift, and go to state 1
    RP              shift, and go to state 86
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    argument_list              go to state 87
    assignment_expression      go to state 88
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 58

   30 assignment_operator: ASSIGN_T .

    $default  reduce using rule 30 (assignment_operator)


State 59

   31 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 31 (assignment_operator)


State 60

   32 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 32 (assignment_operator)


State 61

   33 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 33 (assignment_operator)


State 62

   34 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 34 (assignment_operator)


State 63

   35 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 35 (assignment_operator)


State 64

   61 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 61 (postfix_expression)


State 65

   62 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 62 (postfix_expression)


State 66

   29 assignment_expression: postfix_expression assignment_operator . assignment_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    assignment_expression      go to state 89
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 67

   63 primary_expression: LP expression RP .

    $default  reduce using rule 63 (primary_expression)


State 68

    9 if_statement: IF LP expression . RP LC statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF LP expression . RP LC statement_list RC ELSE LC statement_list RC
   11             | IF LP expression . RP LC statement_list RC

    RP  shift, and go to state 90


State 69

   22 declaration_statement: type_specifier IDENTIFIER . SEMICOLON
   23                      | type_specifier IDENTIFIER . ASSIGN_T expression SEMICOLON

    ASSIGN_T   shift, and go to state 71
    SEMICOLON  shift, and go to state 72


State 70

   14 function_definition: type_specifier IDENTIFIER LP . RP SEMICOLON
   15                    | type_specifier IDENTIFIER LP . parameter_list RP SEMICOLON

    RP         shift, and go to state 91
    BOOLEAN_T  shift, and go to state 10
    INT_T      shift, and go to state 11
    DOUBLE_T   shift, and go to state 12

    parameter_list  go to state 92
    type_specifier  go to state 93


State 71

   23 declaration_statement: type_specifier IDENTIFIER ASSIGN_T . expression SEMICOLON

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    expression                 go to state 94
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 72

   22 declaration_statement: type_specifier IDENTIFIER SEMICOLON .

    $default  reduce using rule 22 (declaration_statement)


State 73

   37 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   39 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 45

    $default  reduce using rule 37 (logical_or_expression)


State 74

   39 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   41 equality_expression: equality_expression . EQ relational_expression
   42                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 46
    NE  shift, and go to state 47

    $default  reduce using rule 39 (logical_and_expression)


State 75

   41 equality_expression: equality_expression EQ relational_expression .
   44 relational_expression: relational_expression . GT additive_expression
   45                      | relational_expression . GE additive_expression
   46                      | relational_expression . LT additive_expression
   47                      | relational_expression . LE additive_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LE  shift, and go to state 50
    LT  shift, and go to state 51

    $default  reduce using rule 41 (equality_expression)


State 76

   42 equality_expression: equality_expression NE relational_expression .
   44 relational_expression: relational_expression . GT additive_expression
   45                      | relational_expression . GE additive_expression
   46                      | relational_expression . LT additive_expression
   47                      | relational_expression . LE additive_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LE  shift, and go to state 50
    LT  shift, and go to state 51

    $default  reduce using rule 42 (equality_expression)


State 77

   44 relational_expression: relational_expression GT additive_expression .
   49 additive_expression: additive_expression . ADD multiplicative_expression
   50                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 44 (relational_expression)


State 78

   45 relational_expression: relational_expression GE additive_expression .
   49 additive_expression: additive_expression . ADD multiplicative_expression
   50                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 45 (relational_expression)


State 79

   47 relational_expression: relational_expression LE additive_expression .
   49 additive_expression: additive_expression . ADD multiplicative_expression
   50                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 47 (relational_expression)


State 80

   46 relational_expression: relational_expression LT additive_expression .
   49 additive_expression: additive_expression . ADD multiplicative_expression
   50                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 46 (relational_expression)


State 81

   49 additive_expression: additive_expression ADD multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL unary_expression
   53                          | multiplicative_expression . DIV unary_expression
   54                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 49 (additive_expression)


State 82

   50 additive_expression: additive_expression SUB multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MUL unary_expression
   53                          | multiplicative_expression . DIV unary_expression
   54                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    MOD  shift, and go to state 56

    $default  reduce using rule 50 (additive_expression)


State 83

   52 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 52 (multiplicative_expression)


State 84

   53 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 53 (multiplicative_expression)


State 85

   54 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 86

   60 postfix_expression: postfix_expression LP RP .

    $default  reduce using rule 60 (postfix_expression)


State 87

   19 argument_list: argument_list . COMMA assignment_expression
   59 postfix_expression: postfix_expression LP argument_list . RP

    RP     shift, and go to state 95
    COMMA  shift, and go to state 96


State 88

   18 argument_list: assignment_expression .

    $default  reduce using rule 18 (argument_list)


State 89

   29 assignment_expression: postfix_expression assignment_operator assignment_expression .

    $default  reduce using rule 29 (assignment_expression)


State 90

    9 if_statement: IF LP expression RP . LC statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF LP expression RP . LC statement_list RC ELSE LC statement_list RC
   11             | IF LP expression RP . LC statement_list RC

    LC  shift, and go to state 97


State 91

   14 function_definition: type_specifier IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 92

   15 function_definition: type_specifier IDENTIFIER LP parameter_list . RP SEMICOLON
   17 parameter_list: parameter_list . COMMA type_specifier IDENTIFIER

    RP     shift, and go to state 99
    COMMA  shift, and go to state 100


State 93

   16 parameter_list: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 101


State 94

   23 declaration_statement: type_specifier IDENTIFIER ASSIGN_T expression . SEMICOLON

    SEMICOLON  shift, and go to state 102


State 95

   59 postfix_expression: postfix_expression LP argument_list RP .

    $default  reduce using rule 59 (postfix_expression)


State 96

   19 argument_list: argument_list COMMA . assignment_expression

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    assignment_expression      go to state 103
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 97

    9 if_statement: IF LP expression RP LC . statement_list RC elsif_list ELSE LC statement_list RC
   10             | IF LP expression RP LC . statement_list RC ELSE LC statement_list RC
   11             | IF LP expression RP LC . statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    statement_list             go to state 104
    broad_statement            go to state 16
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 98

   14 function_definition: type_specifier IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 14 (function_definition)


State 99

   15 function_definition: type_specifier IDENTIFIER LP parameter_list RP . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 100

   17 parameter_list: parameter_list COMMA . type_specifier IDENTIFIER

    BOOLEAN_T  shift, and go to state 10
    INT_T      shift, and go to state 11
    DOUBLE_T   shift, and go to state 12

    type_specifier  go to state 106


State 101

   16 parameter_list: type_specifier IDENTIFIER .

    $default  reduce using rule 16 (parameter_list)


State 102

   23 declaration_statement: type_specifier IDENTIFIER ASSIGN_T expression SEMICOLON .

    $default  reduce using rule 23 (declaration_statement)


State 103

   19 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_list)


State 104

    5 statement_list: statement_list . broad_statement
    9 if_statement: IF LP expression RP LC statement_list . RC elsif_list ELSE LC statement_list RC
   10             | IF LP expression RP LC statement_list . RC ELSE LC statement_list RC
   11             | IF LP expression RP LC statement_list . RC

    LP              shift, and go to state 1
    RC              shift, and go to state 107
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 105

   15 function_definition: type_specifier IDENTIFIER LP parameter_list RP SEMICOLON .

    $default  reduce using rule 15 (function_definition)


State 106

   17 parameter_list: parameter_list COMMA type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


State 107

    9 if_statement: IF LP expression RP LC statement_list RC . elsif_list ELSE LC statement_list RC
   10             | IF LP expression RP LC statement_list RC . ELSE LC statement_list RC
   11             | IF LP expression RP LC statement_list RC .

    ELSE   shift, and go to state 109
    ELSIF  shift, and go to state 110

    $default  reduce using rule 11 (if_statement)

    elsif_list  go to state 111


State 108

   17 parameter_list: parameter_list COMMA type_specifier IDENTIFIER .

    $default  reduce using rule 17 (parameter_list)


State 109

   10 if_statement: IF LP expression RP LC statement_list RC ELSE . LC statement_list RC

    LC  shift, and go to state 112


State 110

   13 elsif_list: ELSIF . LP expression RP LC statement_list RC

    LP  shift, and go to state 113


State 111

    9 if_statement: IF LP expression RP LC statement_list RC elsif_list . ELSE LC statement_list RC
   12 elsif_list: elsif_list . ELSIF LP expression RP LC statement_list RC

    ELSE   shift, and go to state 114
    ELSIF  shift, and go to state 115


State 112

   10 if_statement: IF LP expression RP LC statement_list RC ELSE LC . statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    statement_list             go to state 116
    broad_statement            go to state 16
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 113

   13 elsif_list: ELSIF LP . expression RP LC statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    expression                 go to state 117
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 114

    9 if_statement: IF LP expression RP LC statement_list RC elsif_list ELSE . LC statement_list RC

    LC  shift, and go to state 118


State 115

   12 elsif_list: elsif_list ELSIF . LP expression RP LC statement_list RC

    LP  shift, and go to state 119


State 116

    5 statement_list: statement_list . broad_statement
   10 if_statement: IF LP expression RP LC statement_list RC ELSE LC statement_list . RC

    LP              shift, and go to state 1
    RC              shift, and go to state 120
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 117

   13 elsif_list: ELSIF LP expression . RP LC statement_list RC

    RP  shift, and go to state 121


State 118

    9 if_statement: IF LP expression RP LC statement_list RC elsif_list ELSE LC . statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    statement_list             go to state 122
    broad_statement            go to state 16
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 119

   12 elsif_list: elsif_list ELSIF LP . expression RP LC statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9

    expression                 go to state 123
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 120

   10 if_statement: IF LP expression RP LC statement_list RC ELSE LC statement_list RC .

    $default  reduce using rule 10 (if_statement)


State 121

   13 elsif_list: ELSIF LP expression RP . LC statement_list RC

    LC  shift, and go to state 124


State 122

    5 statement_list: statement_list . broad_statement
    9 if_statement: IF LP expression RP LC statement_list RC elsif_list ELSE LC statement_list . RC

    LP              shift, and go to state 1
    RC              shift, and go to state 125
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 123

   12 elsif_list: elsif_list ELSIF LP expression . RP LC statement_list RC

    RP  shift, and go to state 126


State 124

   13 elsif_list: ELSIF LP expression RP LC . statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    statement_list             go to state 127
    broad_statement            go to state 16
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 125

    9 if_statement: IF LP expression RP LC statement_list RC elsif_list ELSE LC statement_list RC .

    $default  reduce using rule 9 (if_statement)


State 126

   12 elsif_list: elsif_list ELSIF LP expression RP . LC statement_list RC

    LC  shift, and go to state 128


State 127

    5 statement_list: statement_list . broad_statement
   13 elsif_list: ELSIF LP expression RP LC statement_list . RC

    LP              shift, and go to state 1
    RC              shift, and go to state 129
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 128

   12 elsif_list: elsif_list ELSIF LP expression RP LC . statement_list RC

    LP              shift, and go to state 1
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    statement_list             go to state 130
    broad_statement            go to state 16
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 129

   13 elsif_list: ELSIF LP expression RP LC statement_list RC .

    $default  reduce using rule 13 (elsif_list)


State 130

    5 statement_list: statement_list . broad_statement
   12 elsif_list: elsif_list ELSIF LP expression RP LC statement_list . RC

    LP              shift, and go to state 1
    RC              shift, and go to state 131
    SUB             shift, and go to state 2
    EXCLAMATION     shift, and go to state 3
    INT_LITERAL     shift, and go to state 4
    DOUBLE_LITERAL  shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    TRUE_T          shift, and go to state 8
    FALSE_T         shift, and go to state 9
    BOOLEAN_T       shift, and go to state 10
    INT_T           shift, and go to state 11
    DOUBLE_T        shift, and go to state 12

    broad_statement            go to state 40
    if_statement               go to state 17
    statement                  go to state 19
    declaration_statement      go to state 20
    type_specifier             go to state 41
    expression                 go to state 22
    assignment_expression      go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    postfix_expression         go to state 31
    primary_expression         go to state 32


State 131

   12 elsif_list: elsif_list ELSIF LP expression RP LC statement_list RC .

    $default  reduce using rule 12 (elsif_list)
